version: "3.7"

services:
  postgres:
    container_name: arklet_db
    image: postgres:14-alpine
    # env_file:
    #   # - ./docker/env.local
    #   - .env
    volumes:
      - postgres:/var/lib/postgresql/data
    restart: always
    ports:
      - "5435:5432"
      # - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=arklet
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata

  arklet-minter:
    container_name: arklet_minter
    restart: always
    build:
      context: .
      target: prod
      dockerfile: ./Dockerfile
    command: /app/entrypoint.sh
    volumes:
      - ./ark:/app/ark
      - ./arklet:/app/arklet
      - static_volume:/app/static
    env_file:
      - ./docker/env.prod
    environment:
      ARKLET_PORT: "8017"
      # ARKLET_PORT: "8080"
    expose:
      - 8017
      # - 8080

  arklet-resolver:
    container_name: arklet_resolver
    restart: always
    build:
      context: .
      target: prod
      dockerfile: ./Dockerfile
    command: /app/entrypoint.sh
    volumes:
      - ./ark:/app/ark
      - ./arklet:/app/arklet
      - static_volume:/app/static
    env_file:
      - ./docker/env.prod
    environment:
      # ARKLET_PORT: "8000"
      ARKLET_PORT: "8018"
      RESOLVER: "true"
    expose:
      - 8000

  nginx:
    restart: always
    profiles: ["nginx"]
    build: ./nginx
    ports:
      - 80:80
      - 443:443
      # - 8080:8080
      - 8017:8017
    depends_on:
      - arklet-minter
      - arklet-resolver
    volumes:
      - static_volume:/app/static

volumes:
  static_volume:
